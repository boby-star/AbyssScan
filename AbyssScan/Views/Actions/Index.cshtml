@{
    ViewData["Title"] = "Сканування Директорій";
    var directories = Model as List<string>;
}

<h2 style="margin-left: 930px; margin-top: 30px">Сканування Директорій</h2>

<div style="background: #e3e3e3;
            border: 1px solid #3a3a52;
            border-radius: 8px;
            padding: 15px;
            margin-top: 50px;
            height: 200px;
            overflow-y: auto;
            color: #444444;
            font-family: Arial, sans-serif;
            font-size: 14px;">
    <ul>
        @if (directories != null && directories.Any())
        {
            foreach (var dir in directories)
            {
                <li style="color: #444444; margin-top: 10px">@dir</li>
            }
        }
        else
        {
            <p style="color: #444444; margin-left: 850px; margin-top: 60px">
                Директорії відсутні для сканування.
                Поверніться до вибору директорій.
            </p>
        }
    </ul>
</div>

<div style="margin-bottom: 15px; margin-top: 10px">
    <label for="threads" style="color: #444444; font-weight: bold;">Кількість потоків:</label>
    <input type="number" id="threads" min="1" max="100" value="3"
           style="padding: 5px; font-size: 14px; border-radius: 4px;
                  border: 1px solid #3a3a52; background: #e3e3e3; color: #444444;
                  margin-left: 10px;" />
</div>

<div style="margin-bottom: 15px;">
    <button id="startScanButton"
            style="padding: 5px 15px; margin-top: 20px; font-size: 14px; border: none;
                   border-radius: 6px; background-color: #7c5cff; color: white; cursor: pointer;">
        Почати сканування форм
    </button>
</div>

<div id="results"
     style="background: #e3e3e3;
            border: 1px solid #3a3a52;
            border-radius: 8px;
            padding: 15px;
            margin-top: 50px;
            height: 580px;
            overflow-y: auto;
            color: #444444;
            font-family: Arial, sans-serif;
            font-size: 14px;">
    <div id="scanningLogs"
         style="border: 1px solid #3a3a52; border-radius: 4px; padding: 10px; background: #e3e3e3;">
        <p style="color: #888;">Результати сканування будуть відображені тут...</p>
        <div id="spinner" style="display: none; text-align: center; margin-top: 20px;">
            <p style="color: #444444;">Сканування виконується...</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("startScanButton")
            .addEventListener("click", () => {
                // const spinner = document.getElementById("spinner");
                // spinner.style.display = "block"; // Показуємо "спінер"
                startScanning("/Actions/ScanDirectories", "forms");
            });

        function startScanning(endpoint, scanType) {
            const directories = @Html.Raw(Json.Serialize(directories));
            const threads = document.getElementById("threads").value;

            if (!directories || directories.length === 0) {
                alert("Список директорій порожній. Поверніться до вибору директорій.");
                return;
            }

            fetch(endpoint, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    directories,
                    threads: parseInt(threads),
                    scanType
                })
            })
            .then(response => {
                if (!response.ok) throw new Error("Помилка на сервері");
                return response.json();
            })
            .then(data => {
                spinner.style.display = "none";
                displayResults(data);
            })
            .catch(error => {
                spinner.style.display = "none";
                console.error("Помилка:", error);
                alert("Помилка при запуску сканування.");
            });
        }

        function displayResults(data) {
            const resultsDiv = document.getElementById("scanningLogs");
            resultsDiv.innerHTML = "";

            if (!data || data.length === 0) {
                resultsDiv.innerHTML = "<p style='color: #575757;'>Результати відсутні</p>";
                return;
            }

            resultsDiv.innerHTML += "<h3 style='color: #575757;'>Результати сканування</h3>";

            data.forEach(result => {
                const source    = result.source  || "Невідомо";
                const actionUrl = result.action  || "#";
                const method    = result.method  || "GET";

                const inputFields  = Array.isArray(result.inputFields) ? result.inputFields : [];
                const fileFields   = Array.isArray(result.fileFields)  ? result.fileFields  : [];

                const inputFieldsHtml = inputFields.map(f => {
                    return `
                        <li>
                            <strong>${f.name}</strong>
                            (type: ${f.type},
                            required: ${f.isRequired},
                            hidden: ${f.isHidden},
                            placeholder: "${f.placeholder}",
                            accept: "${f.accept}")
                        </li>
                    `;
                }).join("");

                const fileFieldsHtml = fileFields.map(f => {
                    return `
                        <li>
                            <strong>${f.name}</strong>
                            (type: ${f.type},
                            required: ${f.isRequired},
                            hidden: ${f.isHidden},
                            accept: "${f.accept}")
                        </li>
                    `;
                }).join("");

                resultsDiv.innerHTML += `
                  <div style="margin-bottom: 15px; padding: 10px; border: 1px solid #444; border-radius: 5px;">
                    <h4>Джерело: <a href="${source}" target="_blank">${source}</a></h4>
                    <p>Action: <a href="${actionUrl}" target="_blank">${actionUrl}</a></p>
                    <p>Метод: ${method}</p>

                    <p><u>Поля вводу</u>:</p>
                    ${
                      inputFieldsHtml
                        ? `<ul style="margin-left:20px;">${inputFieldsHtml}</ul>`
                        : "<em>Немає полів вводу</em>"
                    }

                    <p><u>Поля завантаження файлів</u>:</p>
                    ${
                      fileFieldsHtml
                        ? `<ul style="margin-left:20px;">${fileFieldsHtml}</ul>`
                        : "<em>Немає file-полів</em>"
                    }
                  </div>
                `;
            });
        }
    </script>
}
